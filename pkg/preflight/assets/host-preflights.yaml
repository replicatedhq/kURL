# https://kurl.sh/docs/install-with-kurl/system-requirements
apiVersion: troubleshoot.sh/v1beta2
kind: HostPreflight
metadata:
  name: kurl-builtin
spec:
  collectors:
    - cpu: {}
    - memory: {}
    - diskUsage:
        collectorName: "Ephemeral Disk Usage"
        path: /var/lib/kubelet
    - tcpLoadBalancer:
        collectorName: "Kubernetes API Server Load Balancer"
        port: 6443
        address: {{ .Installer.Spec.Kubernetes.LoadBalancerAddress }}
        timeout: 3m
        # ha and is first master (primary and not join) and not is upgrade
        exclude: '{{ and .Installer.Spec.Kubernetes.Version .Installer.Spec.Kubernetes.LoadBalancerAddress .IsPrimary (not .IsJoin) (not .IsUpgrade) | not }}'
        #    - blockDevices:
        #        # rook block storage or cstor is enabled and not upgrade
        #        exclude: '{{ and (or (and .Installer.Spec.Rook.Version .Installer.Spec.Rook.IsBlockStorageEnabled) (and .Installer.Spec.OpenEBS.Version .Installer.Spec.OpenEBS.IsCstorEnabled)) (not .IsUpgrade) | not }}'
    - tcpPortStatus:
        collectorName: "Kubernetes API TCP Port Status"
        port: 6443
        exclude: '{{ and .IsPrimary (not .IsUpgrade) | not }}'
    - tcpPortStatus:
        collectorName: "ETCD Client API TCP Port Status"
        port: 2379
        exclude: '{{ and .IsPrimary (not .IsUpgrade) | not }}'
    - tcpPortStatus:
        collectorName: "ETCD Server API TCP Port Status"
        port: 2380
        exclude: '{{ and .IsPrimary (not .IsUpgrade) | not }}'
    - tcpPortStatus:
        collectorName: "Kubelet API TCP Port Status"
        port: 10250
        exclude: '{{ and (not .IsUpgrade) | not }}'
    - tcpPortStatus:
        collectorName: "Kube Scheduler TCP Port Status"
        port: 10251
        exclude: '{{ and .IsPrimary (not .IsUpgrade) | not }}'
    - tcpPortStatus:
        collectorName: "Kube Controller Manager TCP Port Status"
        port: 10252
        exclude: '{{ and .IsPrimary (not .IsUpgrade) | not }}'
    - tcpConnect:
        collectorName: "Kubernetes API TCP Connection Status"
        address: '{{ .Installer.Spec.Kubernetes.MasterAddress }}'
        exclude: '{{ and .Installer.Spec.Kubernetes.Version .Installer.Spec.Kubernetes.MasterAddress .IsJoin | not }}'

  analyzers:
    - cpu:
        checkName: "Number of CPUs"
        outcomes:
          - warn:
              when: "count < 4"
              message: At least 4 CPU cores are recommended
          - fail:
              when: "count < 2"
              message: At least 2 CPU cores are required, and 4 CPU cores are recommended
          - pass:
              message: This server has at least 4 CPU cores
    - memory:
        checkName: "Amount of Memory"
        outcomes:
          - warn:
              when: "< 8Gi"
              message: At least 8Gi of memory is recommended
          - fail:
              when: "< 4Gi"
              message: At least 4Gi of memory is required, and 8Gi of memory is recommended
          - pass:
              message: The system has at least 8Gi of memory
    - diskUsage:
        checkName: "Ephemeral Disk Usage"
        collectorName: "Ephemeral Disk Usage"
        outcomes:
          - fail:
              when: "total < 30Gi"
              message: The disk containing directory /var/lib/kubelet has less than 30Gi of total space
          - fail:
              when: "used/total > 80%"
              message: The disk containing directory /var/lib/kubelet is more than 80% full
          - warn:
              when: "used/total > 60%"
              message: The disk containing directory /var/lib/kubelet is more than 60% full
          - pass:
              message: The disk containing directory /var/lib/kubelet has at least 30Gi disk space available
    - tcpLoadBalancer:
        checkName: "Kubernetes API Server Load Balancer"
        collectorName: "Kubernetes API Server Load Balancer"
        # ha and is first master (primary and not join) and not is upgrade
        exclude: '{{ and .Installer.Spec.Kubernetes.Version .Installer.Spec.Kubernetes.LoadBalancerAddress .IsPrimary (not .IsJoin) (not .IsUpgrade) | not }}'
        outcomes:
          - warn:
              when: "connection-refused"
              message: Connection to {{ .Installer.Spec.Kubernetes.LoadBalancerAddress }} via load balancer was refused.
          - warn:
              when: "connection-timeout"
              message: Timed out connecting to {{ .Installer.Spec.Kubernetes.LoadBalancerAddress }} via load balancer. Check your firewall.
          - warn:
              when: "error"
              message: Unexpected port status
          - warn:
              when: "address-in-use"
              message: Port 6443 is unavailable
          - pass:
              when: "connected"
              message: Successfully connected to {{ .Installer.Spec.Kubernetes.LoadBalancerAddress }} via load balancer
          - warn:
              message: Unexpected port status
              #    - blockDevices:
              #        # rook block storage or cstor is enabled and not upgrade
              #        exclude: '{{ and (or (and .Installer.Spec.Rook.Version .Installer.Spec.Rook.IsBlockStorageEnabled) (and .Installer.Spec.OpenEBS.Version .Installer.Spec.OpenEBS.IsCstorEnabled)) (not .IsUpgrade) | not }}'
              #        outcomes:
              #          - pass:
              #              when: "{{ if (and .Installer.Spec.Rook.Version .Installer.Spec.Rook.BlockDeviceFilter) }}{{ .Installer.Spec.Rook.BlockDeviceFilter }}{{ else }}.*{{ end }} == 1"
              #              message: One available block device
              #          - pass:
              #              when: "{{ if (and .Installer.Spec.Rook.Version .Installer.Spec.Rook.BlockDeviceFilter) }}{{ .Installer.Spec.Rook.BlockDeviceFilter }}{{ else }}.*{{ end }} > 1"
              #              message: Multiple available block devices
              #          - fail:
              #              message: No available block devices
    - tcpPortStatus:
        checkName: "Kubernetes API TCP Port Status"
        collectorName: "Kubernetes API TCP Port Status"
        exclude: '{{ and .IsPrimary (not .IsUpgrade) | not }}'
        outcomes:
          - fail:
              when: "connection-refused"
              message: Connection to port 6443 was refused. This is likely to be a routing problem since this preflight configures a test server to listen on this port.
          - warn:
              when: "address-in-use"
              message: Another process was already listening on port 6443.
          - fail:
              when: "connection-timeout"
              message: Timed out connecting to port 6443. Check your firewall.
          - fail:
              when: "error"
              message: Unexpected port status
          - pass:
              when: "connected"
              message: Port 6443 is open
          - warn:
              message: Unexpected port status
    - tcpPortStatus:
        checkName: "ETCD Client API TCP Port Status"
        collectorName: "ETCD Client API TCP Port Status"
        exclude: '{{ and .IsPrimary (not .IsUpgrade) | not }}'
        outcomes:
          - fail:
              when: "connection-refused"
              message: Connection to port 2379 was refused. This is likely to be a routing problem since this preflight configures a test server to listen on this port.
          - warn:
              when: "address-in-use"
              message: Another process was already listening on port 2379.
          - fail:
              when: "connection-timeout"
              message: Timed out connecting to port 2379. Check your firewall.
          - fail:
              when: "error"
              message: Unexpected port status
          - pass:
              when: "connected"
              message: Port 2379 is open
          - warn:
              message: Unexpected port status
    - tcpPortStatus:
        checkName: "ETCD Server API TCP Port Status"
        collectorName: "ETCD Server API TCP Port Status"
        exclude: '{{ and .IsPrimary (not .IsUpgrade) | not }}'
        outcomes:
          - fail:
              when: "connection-refused"
              message: Connection to port 2380 was refused. This is likely to be a routing problem since this preflight configures a test server to listen on this port.
          - warn:
              when: "address-in-use"
              message: Another process was already listening on port 2380.
          - fail:
              when: "connection-timeout"
              message: Timed out connecting to port 2380. Check your firewall.
          - fail:
              when: "error"
              message: Unexpected port status
          - pass:
              when: "connected"
              message: Port 2380 is open
          - warn:
              message: Unexpected port status
    - tcpPortStatus:
        checkName: "Kubelet API TCP Port Status"
        collectorName: "Kubelet API TCP Port Status"
        exclude: '{{ and (not .IsUpgrade) | not }}'
        outcomes:
          - fail:
              when: "connection-refused"
              message: Connection to port 10250 was refused. This is likely to be a routing problem since this preflight configures a test server to listen on this port.
          - warn:
              when: "address-in-use"
              message: Another process was already listening on port 10250.
          - fail:
              when: "connection-timeout"
              message: Timed out connecting to port 10250. Check your firewall.
          - fail:
              when: "error"
              message: Unexpected port status
          - pass:
              when: "connected"
              message: Port 10250 is open
          - warn:
              message: Unexpected port status
    - tcpPortStatus:
        checkName: "Kube Scheduler TCP Port Status"
        collectorName: "Kube Scheduler TCP Port Status"
        exclude: '{{ and .IsPrimary (not .IsUpgrade) | not }}'
        outcomes:
          - fail:
              when: "connection-refused"
              message: Connection to port 10251 was refused. This is likely to be a routing problem since this preflight configures a test server to listen on this port.
          - warn:
              when: "address-in-use"
              message: Another process was already listening on port 10251.
          - fail:
              when: "connection-timeout"
              message: Timed out connecting to port 10251. Check your firewall.
          - fail:
              when: "error"
              message: Unexpected port status
          - pass:
              when: "connected"
              message: Port 10251 is open
          - warn:
              message: Unexpected port status
    - tcpPortStatus:
        checkName: "Kube Controller Manager TCP Port Status"
        collectorName: "Kube Controller Manager TCP Port Status"
        exclude: '{{ and .IsPrimary (not .IsUpgrade) | not }}'
        outcomes:
          - fail:
              when: "connection-refused"
              message: Connection to port 10252 was refused. This is likely to be a routing problem since this preflight configures a test server to listen on this port.
          - warn:
              when: "address-in-use"
              message: Another process was already listening on port 10252.
          - fail:
              when: "connection-timeout"
              message: Timed out connecting to port 10252. Check your firewall.
          - fail:
              when: "error"
              message: Unexpected port status
          - pass:
              when: "connected"
              message: Port 10252 is open
          - warn:
              message: Unexpected port status
    - tcpConnect:
        checkName: "Kubernetes API TCP Connection Status"
        collectorName: "Kubernetes API TCP Connection Status"
        exclude: '{{ and .Installer.Spec.Kubernetes.Version .Installer.Spec.Kubernetes.MasterAddress .IsJoin | not }}'
        outcomes:
          - fail:
              when: "connection-refused"
              message: Connection to the Kubernetes API at address {{ .Installer.Spec.Kubernetes.MasterAddress }} was refused
          - fail:
              when: "connection-timeout"
              message: Timed out connecting to the Kubernetes API at address {{ .Installer.Spec.Kubernetes.MasterAddress }}
          - fail:
              when: "error"
              message: Unexpected error connecting to the Kubernetes API at address {{ .Installer.Spec.Kubernetes.MasterAddress }}
          - pass:
              when: "connected"
              message: Successfully connected to the Kubernetes API at address {{ .Installer.Spec.Kubernetes.MasterAddress }}
          - warn:
              message: Unexpected TCP connection status
