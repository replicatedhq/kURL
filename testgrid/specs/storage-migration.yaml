- name: Migrate from Rook 1.0.4 to OpenEBS + Minio
  flags: "yes"
  installerApiEndpoint: https://kurl.sh
  installerSpec:
    kurl:
      installerVersion: "v2024.07.02-0"
    kubernetes:
      version: 1.19.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.1
    kotsadm:
      version: latest
    ekco:
      version: latest
    rook:
      version: 1.0.4
  upgradeSpec:
    kubernetes:
      version: 1.19.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.1
    kotsadm:
      version: latest
    ekco:
      version: latest
    openebs:
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
    minio:
      version: latest
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data" "registry:2.8.1"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
    install_and_customize_kurl_integration_test_application
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "openebs"
    test_pull_image_from_registry
    check_and_customize_kurl_integration_test_application
    if kubectl get namespace/rook-ceph ; then
      echo Rook namespace found after the upgrade.
      exit 1
    fi
    if [ -d "/var/lib/rook" ] || [ -d "/opt/replicated/rook" ]; then
       echo  Rook Data directories not removed.
       exit 1
    fi
  unsupportedOSIDs:
  - amazon-2023 # Kubernetes < 1.24 are not supported on Amazon Linux.
- name: Migrate from Rook 1.12.x to OpenEBS + Minio
  flags: "yes"
  installerApiEndpoint: https://kurl.sh
  installerSpec:
    kurl:
      installerVersion: "v2024.07.02-0"
    kubernetes:
      version: 1.26.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.1
    kotsadm:
      version: latest
    ekco:
      version: latest
    rook:
      version: 1.12.x
  upgradeSpec:
    kubernetes:
      version: 1.26.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.1
    kotsadm:
      version: latest
    ekco:
      version: latest
    openebs:
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
    minio:
      version: latest
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data" "registry:2.8.1"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
    install_and_customize_kurl_integration_test_application
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "openebs"
    test_pull_image_from_registry
    check_and_customize_kurl_integration_test_application
    if kubectl get namespace/rook-ceph ; then
      echo Rook namespace found after the upgrade.
      exit 1
    fi
    if [ -d "/var/lib/rook" ] || [ -d "/opt/replicated/rook" ]; then
       echo  Rook Data directories not removed.
       exit 1
    fi
- name: Migrate from Longhorn (S3 disabled) to OpenEBS + Minio
  flags: "yes"
  installerApiEndpoint: https://kurl.sh
  installerSpec:
    kurl:
      installerVersion: "v2024.07.02-0"
    kubernetes:
      version: 1.24.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    kotsadm:
      version: latest
      disableS3: true
    ekco:
      version: latest
    longhorn:
      version: 1.3.x
  upgradeSpec:
    kubernetes:
      version: 1.24.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    kotsadm:
      version: latest
    ekco:
      version: latest
    openebs:
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
    minio:
      version: latest
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data" "registry:2.8.1"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    install_and_customize_kurl_integration_test_application
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "openebs"
    check_and_customize_kurl_integration_test_application
    if kubectl get namespace/longhorn-system ; then
      echo Longhorn namespace found after the upgrade.
      exit 1
    fi
- name: Migrate from Longhorn + Minio to OpenEBS + Minio
  flags: "yes"
  cpu: 6
  installerApiEndpoint: https://kurl.sh
  installerSpec:
    kurl:
      installerVersion: "v2024.07.02-0"
    kubernetes:
      version: 1.24.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.1
    kotsadm:
      version: latest
    ekco:
      version: latest
    longhorn:
      version: 1.3.x
    minio:
      version: latest
    prometheus:
      version: latest
  upgradeSpec:
    kubernetes:
      version: 1.24.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.1
    kotsadm:
      version: latest
    ekco:
      version: latest
    openebs:
      version: latest
      isLocalPVEnabled: true
      localPVStorageClassName: local
    minio:
      version: latest
    prometheus:
      version: latest
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data" "registry:2.8.1"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
    install_and_customize_kurl_integration_test_application
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "openebs"
    test_pull_image_from_registry
    check_and_customize_kurl_integration_test_application
    if kubectl get namespace/longhorn-system ; then
      echo Longhorn namespace found after the upgrade.
      exit 1
    fi
- name: Migrate from Rook 1.0.4 to OpenEBS (S3 disabled)
  flags: "yes"
  installerApiEndpoint: https://kurl.sh
  installerSpec:
    kurl:
      installerVersion: "v2024.07.02-0"
    kubernetes:
      version: 1.19.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    kotsadm:
      version: latest
    ekco:
      version: latest
    rook:
      version: 1.0.4
  upgradeSpec:
    kubernetes:
      version: 1.19.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    kotsadm:
      version: latest
      disableS3: true
    ekco:
      version: latest
    openebs:
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data" "registry:2.8.1"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    install_and_customize_kurl_integration_test_application
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "openebs"
    check_and_customize_kurl_integration_test_application
    if ! kubectl get namespace/rook-ceph ; then
      echo Rook namespace should NOT be removed after the upgrade. MinIO is NOT selected
      exit 1
    fi
  unsupportedOSIDs:
  - amazon-2023 # Kubernetes < 1.24 are not supported on Amazon Linux.
- name: Migrate from Rook 1.12.x to OpenEBS (S3 disabled)
  flags: "yes"
  installerApiEndpoint: https://kurl.sh
  installerSpec:
    kurl:
      installerVersion: "v2024.07.02-0"
    kubernetes:
      version: 1.26.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    kotsadm:
      version: latest
    ekco:
      version: latest
    rook:
      version: 1.12.x
  upgradeSpec:
    kubernetes:
      version: 1.26.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    kotsadm:
      version: latest
      disableS3: true
    ekco:
      version: latest
    openebs:
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data" "registry:2.8.1"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    install_and_customize_kurl_integration_test_application
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "openebs"
    check_and_customize_kurl_integration_test_application
    if ! kubectl get namespace/rook-ceph ; then
      echo Rook namespace should NOT be removed after the upgrade. MinIO is NOT selected
      exit 1
    fi
- name: Migrate from Longhorn (S3 disabled) to OpenEBS (S3 disabled)
  flags: "yes"
  installerApiEndpoint: https://kurl.sh
  installerSpec:
    kurl:
      installerVersion: "v2024.07.02-0"
    kubernetes:
      version: 1.24.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.1
    kotsadm:
      version: latest
      disableS3: true
    ekco:
      version: latest
    longhorn:
      version: 1.3.x
  upgradeSpec:
    kubernetes:
      version: 1.24.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    kotsadm:
      version: latest
      disableS3: true
    ekco:
      version: latest
    openebs:
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data" "registry:2.8.1"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    install_and_customize_kurl_integration_test_application
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "openebs"
    check_and_customize_kurl_integration_test_application
    if kubectl get namespace/longhorn-system ; then
      echo Longhorn namespace found after the upgrade.
      exit 1
    fi
- name: Migrate from Longhorn + Minio to OpenEBS (S3 disabled)
  flags: "yes"
  installerApiEndpoint: https://kurl.sh
  installerSpec:
    kurl:
      installerVersion: "v2024.07.02-0"
    kubernetes:
      version: 1.24.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.1
    kotsadm:
      version: latest
    ekco:
      version: latest
    longhorn:
      version: 1.3.x
    minio:
      version: latest
  upgradeSpec:
    kubernetes:
      version: 1.24.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    kotsadm:
      version: latest
      disableS3: true
    ekco:
      version: latest
    openebs:
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data" "registry:2.8.1"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    install_and_customize_kurl_integration_test_application
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "openebs"
    check_and_customize_kurl_integration_test_application
    if kubectl get namespace/longhorn-system ; then
      echo Longhorn namespace found after the upgrade.
      exit 1
    fi
- name: Migrate from OpenEBS + Minio to OpenEBS (S3 disabled)
  flags: "yes"
  installerApiEndpoint: https://kurl.sh
  installerSpec:
    kurl:
      installerVersion: "v2024.07.02-0"
    kubernetes:
      version: 1.26.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.1
    kotsadm:
      version: latest
    ekco:
      version: latest
    openebs:
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
    minio:
      version: latest
  upgradeSpec:
    kubernetes:
      version: 1.26.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.1
    kotsadm:
      version: latest
      disableS3: true
    ekco:
      version: latest
    openebs:
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data" "registry:2.8.1"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
    install_and_customize_kurl_integration_test_application
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "openebs"
    test_pull_image_from_registry
    check_and_customize_kurl_integration_test_application
- name: Migrate from Rook 1.0.4 to Rook 1.8.x
  flags: "yes"
  cpu: 4
  numPrimaryNodes: 1
  numSecondaryNodes: 2
  installerApiEndpoint: https://kurl.sh
  installerSpec:
    kurl:
      installerVersion: "v2024.07.02-0"
    kubernetes:
      version: 1.19.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm:
      version: latest
    ekco:
      version: latest
    rook:
      version: 1.0.4
  upgradeSpec:
    kubernetes:
      version: 1.19.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm:
      version: latest
    ekco:
      version: latest
    rook:
      version: 1.8.x
  postInstallScript: |
    # wait for ekco to scale up the Ceph cluster
    while [ "$(kubectl -n rook-ceph get pod --no-headers -l app=rook-ceph-osd | wc -l)" != "3" ]; do sleep 10 ; done
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data" "registry:2.8.1"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
    install_and_customize_kurl_integration_test_application
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "rook"
    test_pull_image_from_registry
    check_and_customize_kurl_integration_test_application
    # rook data directory is not removed but perhaps it should be
    # if [ -d "/opt/replicated/rook" ]; then
    #    echo  Rook Data directory not removed.
    #    exit 1
    # fi
  unsupportedOSIDs:
  - amazon-2023 # Kubernetes < 1.24 are not supported on Amazon Linux.
- name: Migrate from Rook 1.8.x to Rook 1.12.x
  flags: "yes"
  cpu: 4
  numPrimaryNodes: 1
  numSecondaryNodes: 2
  installerApiEndpoint: https://kurl.sh
  installerSpec:
    kurl:
      installerVersion: "v2024.07.02-0"
    kubernetes:
      version: 1.19.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm:
      version: latest
    ekco:
      version: latest
    rook:
      version: 1.8.x
  upgradeSpec:
    kubernetes:
      version: 1.19.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.x
    kotsadm:
      version: latest
    ekco:
      version: latest
    rook:
      version: 1.12.x
  postInstallScript: |
    # wait for ekco to scale up the Ceph cluster
    while [ "$(kubectl -n rook-ceph get pod --no-headers -l app=rook-ceph-osd | wc -l)" != "3" ]; do sleep 10 ; done
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data" "registry:2.8.1"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
    install_and_customize_kurl_integration_test_application
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "rook"
    test_pull_image_from_registry
    check_and_customize_kurl_integration_test_application
    # rook data directory is not removed but perhaps it should be
    # if [ -d "/opt/replicated/rook" ]; then
    #    echo  Rook Data directory not removed.
    #    exit 1
    # fi
  unsupportedOSIDs:
  - amazon-2023 # Kubernetes < 1.24 are not supported on Amazon Linux.
- name: Migrate from Longhorn + Minio to Rook 1.12.x
  flags: "yes"
  cpu: 4
  numPrimaryNodes: 1
  numSecondaryNodes: 2
  installerApiEndpoint: https://kurl.sh
  installerSpec:
    kurl:
      installerVersion: "v2024.07.02-0"
    kubernetes:
      version: 1.21.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.1
    kotsadm:
      version: latest
    ekco:
      version: latest
    longhorn:
      version: 1.3.x
    minio:
      version: latest
  upgradeSpec:
    kubernetes:
      version: 1.21.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.1
    kotsadm:
      version: latest
    ekco:
      version: latest
    rook:
      version: 1.12.x
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data" "registry:2.8.1"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
    install_and_customize_kurl_integration_test_application
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "rook"
    test_pull_image_from_registry
    check_and_customize_kurl_integration_test_application
    if kubectl get namespace/longhorn-system ; then
      echo Longhorn namespace found after the upgrade.
      exit 1
    fi
  unsupportedOSIDs:
  - amazon-2023 # Kubernetes < 1.24 are not supported on Amazon Linux.
- name: Migrate from Rook 1.0.4 to OpenEBS + Minio (multi-node)
  flags: "yes"
  cpu: 4
  numPrimaryNodes: 1
  numSecondaryNodes: 2
  installerApiEndpoint: https://kurl.sh
  installerSpec:
    kurl:
      installerVersion: "v2024.07.02-0"
    kubernetes:
      version: 1.19.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.1
    kotsadm:
      version: latest
    ekco:
      version: latest
    rook:
      version: 1.0.4
  upgradeSpec:
    kubernetes:
      version: 1.19.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.1
    kotsadm:
      version: latest
    ekco:
      version: latest
    openebs:
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
    minio:
      version: latest
  postInstallScript: |
    # wait for ekco to scale up the Ceph cluster
    while [ "$(kubectl -n rook-ceph get pod --no-headers -l app=rook-ceph-osd | wc -l)" != "3" ]; do sleep 10 ; done
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data" "registry:2.8.1"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
    install_and_customize_kurl_integration_test_application
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "openebs"
    test_pull_image_from_registry
    check_and_customize_kurl_integration_test_application
    if kubectl get namespace/rook-ceph ; then
      echo Rook namespace found after the upgrade.
      exit 1
    fi
    if [ -d "/var/lib/rook" ] || [ -d "/opt/replicated/rook" ]; then
       echo  Rook Data directories not removed.
       exit 1
    fi
  unsupportedOSIDs:
  - amazon-2023 # Kubernetes < 1.24 are not supported on Amazon Linux.
- name: Migrate from Rook 1.12.x to OpenEBS + Minio (multi-node)
  flags: "yes"
  cpu: 4
  numPrimaryNodes: 1
  numSecondaryNodes: 2
  installerApiEndpoint: https://kurl.sh
  installerSpec:
    kurl:
      installerVersion: "v2024.07.02-0"
    kubernetes:
      version: 1.26.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.1
    kotsadm:
      version: latest
    ekco:
      version: latest
    rook:
      version: 1.12.x
  upgradeSpec:
    kubernetes:
      version: 1.26.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.1
    kotsadm:
      version: latest
    ekco:
      version: latest
    openebs:
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
    minio:
      version: latest
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data" "registry:2.8.1"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
    install_and_customize_kurl_integration_test_application
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "openebs"
    test_pull_image_from_registry
    check_and_customize_kurl_integration_test_application
    if kubectl get namespace/rook-ceph ; then
      echo Rook namespace found after the upgrade.
      exit 1
    fi
    if [ -d "/var/lib/rook" ] || [ -d "/opt/replicated/rook" ]; then
       echo  Rook Data directories not removed.
       exit 1
    fi
- name: Migrate from Longhorn + Minio to OpenEBS + Minio (multi-node)
  flags: "yes"
  cpu: 4
  numPrimaryNodes: 1
  numSecondaryNodes: 2
  installerApiEndpoint: https://kurl.sh
  installerSpec:
    kurl:
      installerVersion: "v2024.07.02-0"
    kubernetes:
      version: 1.19.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.1
    kotsadm:
      version: latest
    ekco:
      version: latest
    longhorn:
      version: 1.3.x
    minio:
      version: latest
  upgradeSpec:
    kubernetes:
      version: 1.19.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.1
    kotsadm:
      version: latest
    ekco:
      version: latest
    openebs:
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
    minio:
      version: latest
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data" "registry:2.8.1"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
    install_and_customize_kurl_integration_test_application
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "openebs"
    test_pull_image_from_registry
    check_and_customize_kurl_integration_test_application
    if kubectl get namespace/longhorn-system ; then
      echo Longhorn namespace found after the upgrade.
      exit 1
    fi
  unsupportedOSIDs:
  - amazon-2023 # Kubernetes < 1.24 are not supported on Amazon Linux.
- name: Migrate from Rook 1.12.x to OpenEBS 3.4.0 with localpv migrate
  flags: "yes"
  installerApiEndpoint: https://kurl.sh
  installerSpec:
    kurl:
      installerVersion: "v2024.07.02-0"
    kubernetes:
      version: 1.24.x
    flannel:
      version: latest
    containerd:
      version: latest
    rook:
      version: 1.12.x
    kotsadm:
      version: latest
  upgradeSpec:
    kubernetes:
      version: 1.26.x
    flannel:
      version: latest
    containerd:
      version: latest
    openebs:
      isLocalPVEnabled: true
      localPVStorageClassName: openebs
      namespace: openebs
      version: 3.4.0
    minio:
      version: latest
    kotsadm:
      version: latest
  unsupportedOSIDs:
    - centos-74 # Rook 1.8+ not supported on 3.10.0-693.el7.x86_64 kernel
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    rook_ceph_object_store_info
    validate_read_write_object_store rwtest testfile.txt
    install_and_customize_kurl_integration_test_application
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    minio_object_store_info
    validate_testfile rwtest testfile.txt
    validate_read_write_object_store postupgrade upgradefile.txt
    check_and_customize_kurl_integration_test_application
    if kubectl get namespace/rook-ceph ; then
      echo Rook namespace found after the upgrade.
      exit 1
    fi
    if [ -d "/var/lib/rook" ] || [ -d "/opt/replicated/rook" ]; then
       echo  Rook Data directories not removed.
       exit 1
    fi
- name: Migrate from Rook 1.0.4 to OpenEBS + Minio (Docker config)
  flags: "yes"
  installerApiEndpoint: https://kurl.sh
  installerSpec:
    kurl:
      installerVersion: "v2024.07.02-0"
    kubernetes:
      version: 1.19.x
    docker:
      version: 19.03.10
      daemonConfig: |
        {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-opts": {
            "max-size": "100m",
            "max-file": "3"
          }
        }
    weave:
      version: 2.6.5
    registry:
      version: 2.8.1
    kotsadm:
      version: latest
    ekco:
      version: latest
    rook:
      version: 1.0.4
  upgradeSpec:
    kubernetes:
      version: 1.21.x
    docker:
      version: 19.03.10
      daemonConfig: |
        {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-opts": {
            "max-size": "100m",
            "max-file": "3"
          }
        }
    weave:
      version: 2.6.5-20221025
    registry:
      version: 2.8.1
    kotsadm:
      version: latest
    ekco:
      version: latest
    openebs:
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
    minio:
      version: latest
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data" "registry:2.8.1"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
    install_and_customize_kurl_integration_test_application
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "openebs"
    test_pull_image_from_registry
    check_and_customize_kurl_integration_test_application
    if kubectl get namespace/rook-ceph ; then
      echo Rook namespace found after the upgrade.
      exit 1
    fi
    if [ -d "/var/lib/rook" ] || [ -d "/opt/replicated/rook" ]; then
       echo  Rook Data directories not removed.
       exit 1
    fi
  unsupportedOSIDs:
  - rocky-91 # docker is not supported on rhel 9 variants
  - rocky-9 # docker is not supported on rhel 9 variants
  - ubuntu-2204 # Docker versions < 20.10.17 not supported on ubuntu 22.04
  - amazon-2023 # docker is not supported on amazon 2023
- name: Migrate from OpenEBS (S3 disabled) to OpenEBS + Minio
  flags: "yes"
  installerApiEndpoint: https://kurl.sh
  installerSpec:
    kurl:
      installerVersion: "v2024.07.02-0"
    kubernetes:
      version: 1.26.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.1
    kotsadm:
      version: latest
      disableS3: true
    ekco:
      version: latest
    openebs:
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
  upgradeSpec:
    kubernetes:
      version: 1.26.x
    containerd:
      version: 1.6.x
    flannel:
      version: 0.21.x
    registry:
      version: 2.8.1
    kotsadm:
      version: latest
    ekco:
      version: latest
    openebs:
      version: 3.4.x
      isLocalPVEnabled: true
      localPVStorageClassName: local
    minio:
      version: latest
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data" "registry:2.8.1"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
    install_and_customize_kurl_integration_test_application
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    sleep 120
    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "openebs"
    test_pull_image_from_registry
    check_and_customize_kurl_integration_test_application

- name: Cust 1 - Migrate from Rook+OpenEBS to Longhorn+OpenEBS (Kubernetes 1.19.x to 1.21.x, Docker to Containerd)
  flags: "yes"
  airgap: true
  installerApiEndpoint: https://kurl.sh
  installerSpec:
    kurl:
      installerVersion: "v2024.07.02-0"
    kubernetes:
      version: 1.19.x
    docker:
      version: 19.03.10
      daemonConfig: |
        {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-opts": {
             "max-size": "100m",
             "max-file": "3"
          }
        }
    weave:
      version: 2.6.5
    rook:
      version: 1.0.4
    contour:
      version: 1.7.0
      tlsMinimumProtocolVersion: 1.2
    registry:
      version: 2.7.1
    prometheus:
      version: 0.49.0-17.1.3
    velero:
      version: 1.6.0
    kotsadm:
      version: 1.57.0
    goldpinger:
      version: 3.2.0-4.1.1
    openebs:
      version: 1.6.0
      namespace: openebs
      isLocalPVEnabled: true
      localPVStorageClassName: openebs
      isCstorEnabled: false
    ekco:
      version: 0.10.2
      nodeUnreachableToleration: 5m
      minReadyMasterNodeCount: 2
      minReadyWorkerNodeCount: 0
      rookShouldUseAllNodes: false
      rookShouldDisableReconcileMDSPlacement: false
      rookShouldDisableReconcileCephCSIResources: false
      shouldDisableRebootServices: false
      shouldDisableClearNodes: false
      shouldEnablePurgeNodes: false
      shouldDisableRestartFailedEnvoyPods: false
      envoyPodsNotReadyDuration: 5m
  upgradeSpec:
    kubernetes:
      version: 1.21.x
      containerLogMaxFiles: 5
      containerLogMaxSize: 5Mi
    containerd:
      version: 1.4.6
    weave:
      version: 2.6.5
    longhorn:
      version: 1.1.2
    minio:
      version: 2020-01-25T02-50-51Z
    contour:
      version: 1.7.0
    registry:
      version: 2.7.1
    prometheus:
      version: 0.49.0-17.1.3
    velero:
      version: 1.6.0
    kotsadm:
      version: 1.90.0
    goldpinger:
      version: 3.2.0-4.1.1
    openebs:
      version: 3.4.0
      namespace: openebs
      isLocalPVEnabled: true
      localPVStorageClassName: openebs
      isCstorEnabled: false
    ekco:
      version: 0.16.0
      nodeUnreachableToleration: 5m
      minReadyMasterNodeCount: 2
      minReadyWorkerNodeCount: 0
      rookShouldUseAllNodes: false
      rookShouldDisableReconcileMDSPlacement: false
      rookShouldDisableReconcileCephCSIResources: false
      shouldDisableRebootServices: false
      shouldDisableClearNodes: false
      shouldEnablePurgeNodes: false
      shouldDisableRestartFailedEnvoyPods: false
      envoyPodsNotReadyDuration: 5m
  unsupportedOSIDs:
  - ubuntu-2204 # containerd 1.4.x is not supported on ubuntu 22.04
  - rocky-91 # docker is not supported on rhel 9 variants
  - rocky-9 # docker is not supported on rhel 9 variants
  - amazon-2023 # docker is not supported on amazon 2023
  preInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    mkdir -p /var/lib/kurl/assets
    ( cd /var/lib/kurl/assets && curl -fLO "$(kubernetes_upgrade_bundle_url "$KURL_URL" "$KURL_UPGRADE_URL")" )
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    rook_ceph_object_store_info
    validate_read_write_object_store rwtest testfile.txt
    install_and_customize_kurl_integration_test_application
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    minio_object_store_info
    validate_testfile rwtest testfile.txt
    validate_read_write_object_store postupgrade upgradefile.txt
    check_and_customize_kurl_integration_test_application
    if kubectl get namespace/rook-ceph ; then
      echo Rook namespace found after the upgrade.
      exit 1
    fi
    if [ -d "/var/lib/rook" ] || [ -d "/opt/replicated/rook" ]; then
       echo  Rook Data directories not removed.
       exit 1
    fi

- name: Cust 1 - Migrate from Rook+OpenEBS 1.6.0 to OpenEBS 3.3.0 (Kubernetes 1.19.x to 1.21.x)
  flags: "yes"
  airgap: true
  installerApiEndpoint: https://kurl.sh
  installerSpec:
    kurl:
      installerVersion: "v2022.08.23-0"
    kubernetes:
      version: "1.19.3"
    docker:
      version: "19.03.10"
      daemonConfig: |
        {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-opts": {
              "max-size": "100m",
              "max-file": "3"
              }
        }
    weave:
      version: "2.6.5"
    rook:
      version: "1.0.4"
    contour:
      version: "1.22.0"
      tlsMinimumProtocolVersion: "1.2"
    registry:
      version: "2.7.1"
    prometheus:
      version: "0.58.0-39.4.0"
    velero:
      version: "1.9.0"
    kotsadm:
      version: "1.57.0"
    goldpinger:
      version: "3.2.0-4.1.1"
    openebs:
      version: "1.6.0"
      namespace: "openebs"
      isLocalPVEnabled: true
      localPVStorageClassName: openebs
      isCstorEnabled: false
    ekco:
      version: "0.16.0"
      nodeUnreachableToleration: 5m
      minReadyMasterNodeCount: 2
      minReadyWorkerNodeCount: 0
      rookShouldUseAllNodes: false
      shouldDisableRebootServices: false
      shouldDisableClearNodes: false
      shouldEnablePurgeNodes: false
  upgradeSpec:
    contour:
      tlsMinimumProtocolVersion: '1.2'
      version: 1.23.0
    docker:
      daemonConfig: |
        {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-opts": {
            "max-size": "100m",
            "max-file": "3"
          }
        }
      version: 19.03.10
    ekco:
      minReadyMasterNodeCount: 2
      minReadyWorkerNodeCount: 0
      nodeUnreachableToleration: 5m
      shouldDisableClearNodes: false
      shouldDisableRebootServices: false
      shouldEnablePurgeNodes: false
      version: 0.25.0
    goldpinger:
      version: 3.7.0-5.5.0
    kotsadm:
      version: 1.90.0
    kubernetes:
      version: 1.21.14
    minio:
      version: 2022-10-20T00-55-09Z
    openebs:
      isCstorEnabled: false
      isLocalPVEnabled: true
      localPVStorageClassName: openebs
      namespace: openebs
      version: 3.3.0
    registry:
      version: 2.8.1
    velero:
      version: 1.9.2
      resticTimeout: 24h0m0s
    weave:
      version: 2.6.5-20221025
  unsupportedOSIDs:
  - ol-8x # The kURL version used in this test, v2022.08.23-0, does not support OL-8.7
  - ubuntu-2204 # docker 19.03.4 is not supported on ubuntu 22.04
  - rocky-91 # docker is not supported on rhel 9 variants
  - rocky-9 # docker is not supported on rhel 9 variants
  - amazon-2023 # docker is not supported on amazon 2023
  preInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    mkdir -p /var/lib/kurl/assets
    ( cd /var/lib/kurl/assets && curl -fLO "$(kubernetes_upgrade_bundle_url "$KURL_URL" "$KURL_UPGRADE_URL")" )
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    rook_ceph_object_store_info
    validate_read_write_object_store rwtest testfile.txt
    install_and_customize_kurl_integration_test_application
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    minio_object_store_info
    validate_testfile rwtest testfile.txt
    validate_read_write_object_store postupgrade upgradefile.txt
    check_and_customize_kurl_integration_test_application
    if kubectl get namespace/rook-ceph ; then
      echo Rook namespace found after the upgrade.
      exit 1
    fi
    if [ -d "/var/lib/rook" ] || [ -d "/opt/replicated/rook" ]; then
       echo  Rook Data directories not removed.
       exit 1
    fi

- name: Cust 1 - Migrate from Weave to Flannel (Kubernetes 1.21.x to 1.23.x, Docker to Containerd)
  flags: "yes"
  airgap: true
  installerApiEndpoint: https://kurl.sh
  installerSpec:
    contour:
      tlsMinimumProtocolVersion: '1.2'
      version: 1.23.0
    docker:
      daemonConfig: |
        {
          "exec-opts": ["native.cgroupdriver=systemd"],
          "log-opts": {
            "max-size": "100m",
            "max-file": "3"
          }
        }
      version: 19.03.10
    ekco:
      minReadyMasterNodeCount: 2
      minReadyWorkerNodeCount: 0
      nodeUnreachableToleration: 5m
      shouldDisableClearNodes: false
      shouldDisableRebootServices: false
      shouldEnablePurgeNodes: false
      version: 0.25.0
    goldpinger:
      version: 3.7.0-5.5.0
    kotsadm:
      version: 1.90.0
    kubernetes:
      version: 1.21.14
    kurl:
      installerVersion: "v2022.11.10-1"
    minio:
      version: 2022-10-20T00-55-09Z
    openebs:
      isCstorEnabled: false
      isLocalPVEnabled: true
      localPVStorageClassName: openebs
      namespace: openebs
      version: 3.3.0
    registry:
      version: 2.8.1
    velero:
      version: 1.9.2
      resticTimeout: 24h0m0s
    weave:
      version: 2.6.5-20221025
  upgradeSpec:
    containerd:
      version: 1.6.x # (replicated) changed to .x version
    contour:
      tlsMinimumProtocolVersion: '1.2'
      version: 1.23.2
    ekco:
      minReadyMasterNodeCount: 2
      minReadyWorkerNodeCount: 0
      nodeUnreachableToleration: 5m
      shouldDisableClearNodes: false
      shouldDisableRebootServices: false
      shouldEnablePurgeNodes: false
      version: latest # (replicated) changed to latest version
    goldpinger:
      version: 3.7.0-5.5.0
    kotsadm:
      version: 1.96.3
    kubernetes:
      version: 1.23.x # (replicated) changed to .x version
    minio:
      version: "2023-01-20T02-05-44Z"
    openebs:
      isCstorEnabled: false
      isLocalPVEnabled: true
      localPVStorageClassName: openebs
      namespace: openebs
      version: 3.3.0
    registry:
      version: 2.8.1
    velero:
      version: 1.9.5
      resticTimeout: 24h0m0s
    flannel:
      version: "0.21.x" # (replicated) changed to .x version
  unsupportedOSIDs:
  - ol-8x # The kURL version used in this test, v2022.11.10-1, does not support OL-8.7
  - ubuntu-2204 # docker 19.03.10 is not supported on ubuntu 22.04
  - rocky-91 # docker is not supported on rhel 9 variants
  - rocky-9 # docker is not supported on rhel 9 variants
  - amazon-2023 # docker is not supported on amazon 2023
  preInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    mkdir -p /var/lib/kurl/assets
    ( cd /var/lib/kurl/assets && curl -fLO "$(kubernetes_upgrade_bundle_url "$KURL_URL" "$KURL_UPGRADE_URL")" )
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    minio_object_store_info
    validate_read_write_object_store rwtest testfile.txt
    install_and_customize_kurl_integration_test_application
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    minio_object_store_info
    validate_testfile rwtest testfile.txt
    validate_read_write_object_store postupgrade upgradefile.txt
    check_and_customize_kurl_integration_test_application

- name: Cust 1 - Upgrade from Kubernetes 1.23.x to 1.25.x
  flags: "yes"
  airgap: true
  installerApiEndpoint: https://kurl.sh
  installerSpec:
    containerd:
      version: 1.6.15
    contour:
      tlsMinimumProtocolVersion: '1.2'
      version: 1.23.2
    ekco:
      minReadyMasterNodeCount: 2
      minReadyWorkerNodeCount: 0
      nodeUnreachableToleration: 5m
      shouldDisableClearNodes: false
      shouldDisableRebootServices: false
      shouldEnablePurgeNodes: false
      version: 0.26.2
    goldpinger:
      version: 3.7.0-5.5.0
    kotsadm:
      version: 1.96.3
    kubernetes:
      version: 1.23.15
    kurl:
      installerVersion: "v2023.02.23-0"
    minio:
      version: "2023-01-20T02-05-44Z"
    openebs:
      isCstorEnabled: false
      isLocalPVEnabled: true
      localPVStorageClassName: openebs
      namespace: openebs
      version: 3.3.0
    registry:
      version: 2.8.1
    velero:
      version: 1.9.5
      resticTimeout: 24h0m0s
    flannel:
      version: "0.21.2"
  upgradeSpec:
    containerd:
      version: 1.6.x # (replicated) changed to .x version
    contour:
      tlsMinimumProtocolVersion: '1.2'
      version: 1.24.2
    ekco:
      minReadyMasterNodeCount: 2
      minReadyWorkerNodeCount: 0
      nodeUnreachableToleration: 5m
      shouldDisableClearNodes: false
      shouldDisableRebootServices: false
      shouldEnablePurgeNodes: false
      version: latest # (replicated) changed to latest version
    goldpinger:
      version: 3.7.0-5.6.0
    kotsadm:
      version: 1.96.3
    kubernetes:
      version: 1.25.x # (replicated) changed to .x version
    minio:
      version: "2023-03-13T19-46-17Z"
    openebs:
      isCstorEnabled: false
      isLocalPVEnabled: true
      localPVStorageClassName: openebs
      namespace: openebs
      version: 3.5.0
    registry:
      version: 2.8.1
    velero:
      version: 1.10.2
      resticTimeout: 24h0m0s
    flannel:
      version: 0.21.x # (replicated) changed to .x version
  unsupportedOSIDs:
  - rocky-91 # rocky 9.1 is unsupported on kurl version v2023.02.23-0
  - rocky-9 # rocky 9.1 is unsupported on kurl version v2023.02.23-0
  - amazon-2023 # Kubernetes < 1.24 are not supported on Amazon Linux.
  preInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    mkdir -p /var/lib/kurl/assets
    ( cd /var/lib/kurl/assets && curl -fLO "$(kubernetes_upgrade_bundle_url "$KURL_URL" "$KURL_UPGRADE_URL")" )
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    minio_object_store_info
    validate_read_write_object_store rwtest testfile.txt
    install_and_customize_kurl_integration_test_application
  postUpgradeScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    minio_object_store_info
    validate_testfile rwtest testfile.txt
    validate_read_write_object_store postupgrade upgradefile.txt
    check_and_customize_kurl_integration_test_application

- name: Install Rook with minimum node count of 3
  flags: "yes"
  cpu: 6
  numPrimaryNodes: 1
  numSecondaryNodes: 2
  installerSpec:
    kubernetes:
      version: 1.28.x
    containerd:
      version: latest
    flannel:
      version: latest
    registry:
      version: latest
    ekco:
      version: latest
    kotsadm:
      version: latest
    minio:
      version: latest
    rook:
      version: 1.12.0
      minimumNodeCount: 3
    goldpinger:
      version: latest
    openebs:
      version: 3.6.0
      isLocalPVEnabled: true
      localPVStorageClassName: local
  unsupportedOSIDs:
    - centos-74 # Rook 1.8+ not supported on 3.10.0-693.el7.x86_64 kernel
  postInstallScript: |
    source /opt/kurl-testgrid/testhelpers.sh
    create_deployment_with_mounted_volume "migration-test" "default" "/data" "registry:2.8.1"
    create_random_file_and_upload_to_deployment "migration-test" "default" "./test.data" "/data/test.data"
    test_push_image_to_registry
    install_and_customize_kurl_integration_test_application

    minio_object_store_info
    validate_read_write_object_store rwtest testfile.txt
    
    echo "waiting up to 10m for scaling storageclass to be removed"
    x=0
    while [ "$(kubectl get storageclass scaling --no-headers | wc -l)" -eq 1 ] && [ "$x" -le 6 ] ; do sleep 100 && x=$(( $x + 1 )) ; done
    
    sleep 30 # wait a little longer to make sure that the kotsadm pods have time to come up
    
    echo "all pods"
    kubectl get pods -A
    echo "ekco logs"
    kubectl get pods -n kurl
    kubectl logs -n kurl deployment/ekc-operator
    echo "PVCs"
    kubectl get pvc -A
    echo "SCs"
    kubectl get sc -A
    echo "ceph pools"
    kubectl describe cephblockpool -n rook-ceph
    #    echo "all pods description"
    #    kubectl describe pod -A
    
    kubectl get pods -n rook-ceph
    kubectl get cephcluster -n rook-ceph
    echo "ceph status"
    kubectl exec -n rook-ceph deployment/rook-ceph-tools -- ceph status
    echo "ceph health detail"
    kubectl exec -n rook-ceph deployment/rook-ceph-tools -- ceph health detail
    
    # 'scaling' storage class should have been deleted after the migration
    if kubectl get sc scaling >/dev/null 2>&1 ; then
        echo "OpenEBS 'scaling' storage class was not deleted"
        exit 1
    fi
    # 'distributed' should be the only default storage class after the migration
    if [ "$(kubectl get sc distributed -o jsonpath='{.metadata.annotations.storageclass\.kubernetes\.io/is-default-class}' 2>/dev/null)" != "true" ]; then
        echo "Rook 'distributed' storage class is not the default"
        exit 1
    fi

    download_file_from_deployment_and_compare "migration-test" "default" "./test.data" "/data/test.data"
    pvc_uses_provisioner "migration-test" "default" "rook"
    test_pull_image_from_registry
    check_and_customize_kurl_integration_test_application

    rook_ceph_object_store_info
    validate_read_write_object_store rwtest testfile.txt
