apiVersion: apps/v1
kind: Deployment
metadata:
  name: kurl
spec:
  selector:
    matchLabels:
      app: kurl
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 3
  template:
    metadata:
      labels:
        app: kurl
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 2
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - kurl
              topologyKey: "kubernetes.io/hostname"
      volumes:
      - name: images
        emptyDir: {}
      terminationGracePeriodSeconds: 900 # allow 15 minutes for shutdowns to allow airgap downloads to complete
      containers:
      - name: server
        image: replicated/kurl
        imagePullPolicy: IfNotPresent
        command: ["/bin/server"]
        ports:
        - name: server
          containerPort: 3001
        resources:
          requests:
            cpu: 100m
          limits:
            cpu: 2
        volumeMounts:
        - name: images
          mountPath: "/images"
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: server
            scheme: HTTP
          initialDelaySeconds: 2
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
      - name: kurl
        image: replicated/kurl
        imagePullPolicy: IfNotPresent
        command: ["node", "--no-deprecation", "bin/kurl", "serve"]
        ports:
        - name: kurl
          containerPort: 3000
        env:
        - name: REPLICATED_APP_URL
          value: https://replicated.app
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: kurl
            scheme: HTTP
          initialDelaySeconds: 2
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
