---
apiVersion: v1
kind: ConfigMap
metadata:
  name: registry-config
  labels:
    app: registry
data:
  config.yml: |-
    health:
      storagedriver:
        enabled: true
        interval: 10s
        threshold: 3
    auth:
      htpasswd:
        realm: basic-realm
        path: /auth/htpasswd
    http:
      addr: :443
      headers:
        X-Content-Type-Options:
        - nosniff
      tls:
        certificate: /etc/pki/registry.crt
        key: /etc/pki/registry.key
    log:
      fields:
        service: registry
    storage:
      s3:
        region: "us-east-1"
        regionendpoint: http://$OBJECT_STORE_CLUSTER_IP
        bucket: docker-registry
        accesskey: $OBJECT_STORE_ACCESS_KEY
        secretkey: $OBJECT_STORE_SECRET_KEY
      cache:
        blobdescriptor: inmemory
    version: 0.1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
spec:
  selector:
    matchLabels:
      app: registry
  replicas: 1
  strategy:
    type:
      Recreate
  template:
    metadata:
      labels:
        app: registry
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: registry
        image: registry:2.7.1
        imagePullPolicy: IfNotPresent
        command:
        - /bin/registry
        - serve
        - /etc/docker/registry/config.yml
        ports:
        - containerPort: 443
          protocol: TCP
        volumeMounts:
        - name: registry-config
          mountPath: /etc/docker/registry
        - name: registry-pki
          mountPath: /etc/pki
        - name: registry-htpasswd
          mountPath: /auth
        env:
        - name: REGISTRY_HTTP_SECRET
          valueFrom:
            secretKeyRef:
              key: haSharedSecret
              name: registry-session-secret
      volumes:
      - name: registry-config
        configMap:
          name: registry-config
      - name: registry-pki
        secret:
          secretName: registry-pki
      - name: registry-htpasswd
        secret:
          secretName: registry-htpasswd
