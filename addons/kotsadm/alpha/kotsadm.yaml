apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kotsadm-role
  labels:
    kots.io/kotsadm: "true"
rules:
- apiGroups:
  - ""
  resourceNames:
  - kotsadm-application-metadata
  - kotsadm-gitops
  resources:
  - configmaps
  verbs:
  - get
  - delete
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
- apiGroups:
  - ""
  resourceNames:
  - kotsadm-encryption
  - kotsadm-gitops
  - kotsadm-authstring
  - kotsadm-password
  resources:
  - secrets
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
- apiGroups:
  - ""
  resourceNames:
  - kurl-config
  resources:
  - configmaps
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kotsadm-rolebinding
  labels:
    kots.io/kotsadm: "true"
subjects:
- kind: ServiceAccount
  name: kotsadm
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kotsadm-role
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kotsadm
  labels:
    kots.io/kotsadm: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kotsadm
  labels:
    kots.io/kotsadm: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kotsadm
  template:
    metadata:
      labels:
        app: kotsadm
        kots.io/kotsadm: "true"
    spec:
      securityContext:
        runAsUser: 1001
      serviceAccountName: kotsadm
      volumes:
      - name: kotsadm-web-scripts
        configMap:
          defaultMode: 511 # hex 777
          name: kotsadm-web-scripts
      containers:
      - image: kotsadm/kotsadm:alpha
        name: kotsadm
        command: ["bash"]
        args:
        - "/scripts/start-kotsadm-web.sh"
        ports:
        - name: http
          containerPort: 3000
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
          httpGet:
            path: /healthz
            port: 3000
            scheme: HTTP
        env:
          - name: SHARED_PASSWORD_BCRYPT
            valueFrom:
              secretKeyRef:
                name: kotsadm-password
                key: passwordBcrypt
          - name: SESSION_KEY
            valueFrom:
              secretKeyRef:
                name: kotsadm-session
                key: key
          - name: POSTGRES_URI
            valueFrom:
              secretKeyRef:
                name: kotsadm-postgres
                key: uri
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        volumeMounts:
          - name: kotsadm-web-scripts
            mountPath: /scripts/start-kotsadm-web.sh
            subPath: start-kotsadm-web.sh
---
apiVersion: v1
kind: Service
metadata:
  name: kotsadm
  labels:
    kots.io/kotsadm: "true"
spec:
  type: ClusterIP
  selector:
    app: kotsadm
  ports:
  - name: http
    port: 3000
    targetPort: "http"
