- name: Minimal Latest, Rook
  installerSpec:
    kubernetes:
      version: "1.24.x"
    flannel:
      version: latest
    rook:
      version: "1.9.x"
    containerd:
      version: "latest"
    ekco:
      version: "__testver__"
      s3Override: "__testdist__"
  unsupportedOSIDs:
    - centos-74 # Rook 1.8+ not supported on 3.10.0-693.el7.x86_64 kernel
- name: Kubernetes 1.24, Internal LB, Rook, Multi node
  installerSpec:
    kubernetes:
      version: 1.24.x
    flannel:
      version: latest
    rook:
      version: "1.9.x"
    containerd:
      version: "latest"
    kotsadm:
      version: latest
      disableS3: true
    ekco:
      version: "__testver__"
      s3Override: "__testdist__"
      minReadyMasterNodeCount: 1
      enableInternalLoadBalancer: true
  numPrimaryNodes: 3
  unsupportedOSIDs:
    - centos-74 # Rook 1.8+ not supported on 3.10.0-693.el7.x86_64 kernel
- name: Kubernetes 1.21, Longhorn, Internal LB
  installerSpec:
    kubernetes:
      version: "1.24.x"
    flannel:
      version: latest
    longhorn:
      version: "latest"
    containerd:
      version: "latest"
    ekco:
      version: "__testver__"
      s3Override: "__testdist__"
      enableInternalLoadBalancer: true
- name: podImageOverrides
  installerSpec:
    kubernetes:
      version: "1.25.x"
    containerd:
      version: "latest"
    flannel:
      version: latest
    openebs:
      version: "latest"
      isLocalPVEnabled: true
      localPVStorageClassName: default
    contour:
      version: "1.20.0"
    ekco:
      version: "__testver__"
      s3Override: "__testdist__"
      podImageOverrides:
        - ghcr.io/projectcontour/contour:v1.20.0=ghcr.io/projectcontour/contour:v1.20.1
  postInstallScript: |
    sleep 120

    pod_image="$(kubectl -n projectcontour get po -l app=contour -o jsonpath='{.items[].spec.containers[].image}')"
    if ! echo "$pod_image" | grep 'v1.20.1' ; then
      echo "Pod image override failed: $pod_image"
      exit 1
    fi

    echo "Pod image override success: $pod_image"
- name: HAProxy Config File Permission Set to 640
  installerSpec:
    kubernetes:
      version: "1.25.x"
    containerd:
      version: "latest"
    flannel:
      version: latest
    openebs:
      version: "latest"
      isLocalPVEnabled: true
      localPVStorageClassName: default
    ekco:
      version: "__testver__"
      s3Override: "__testdist__"
      enableInternalLoadBalancer: true
  preInstallScript: |
    umask 0027
- name: Upgrade HA add ekco
  installerSpec:
    kubernetes:
      version: "1.23.x"
      loadBalancerUseFirstPrimary: true
    flannel:
      version: latest
    containerd:
      version: "latest"
    openebs:
      version: "latest"
      isLocalPVEnabled: true
      localPVStorageClassName: default
    ekco:
      version: "0.10.1"
  upgradeSpec:
    kubernetes:
      version: "1.25.x"
    flannel:
      version: latest
    containerd:
      version: "latest"
    openebs:
      version: "latest"
      isLocalPVEnabled: true
      localPVStorageClassName: default
    ekco:
      version: "__testver__"
      s3Override: "__testdist__"
      enableInternalLoadBalancer: true
  flags: "ha"
  unsupportedOSIDs:
  - amazon-2023 # Kubernetes < 1.24 are not supported on Amazon Linux.
- name: HA minio initial installation
  installerSpec:
    kubernetes:
      version: "1.25.x"
    containerd:
      version: "latest"
    flannel:
      version: latest
    openebs:
      version: "latest"
      isLocalPVEnabled: true
      localPVStorageClassName: default
    minio:
      version: "latest"
    ekco:
      version: "__testver__"
      s3Override: "__testdist__"
- name: Upgrade k8s with the PR version of ekco
  installerSpec:
    kubernetes:
      version: "1.28.0"
    flannel:
      version: latest
    containerd:
      version: "latest"
    ekco:
      version: "__testver__"
      s3Override: "__testdist__"
      enableInternalLoadBalancer: true
  upgradeSpec:
    kubernetes:
      version: "1.29.x"
    flannel:
      version: latest
    containerd:
      version: "latest"
    ekco:
      version: "__testver__"
      s3Override: "__testdist__"
      enableInternalLoadBalancer: true
