name: cron-rebuild-packages-prod
on:
  workflow_dispatch: {}

jobs:
  build-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3

      - id: set-matrix
        name: Build image matrix
        run: |
          git fetch --tags
          tag=$(git tag | grep '^v20' | grep -v 'v2022\.09\.04' | sort | tail -1)
          export KURL_UTIL_IMAGE=replicated/kur-util:${tag}
          export KURL_BIN_UTILS_FILE=kurl-bin-utils-${tag}.tar.gz
          OUTPUT=`bin/list-all-packages-actions-matrix.sh "${{ github.event.inputs.index }}"`
          echo "matrix=$OUTPUT" >> "$GITHUB_OUTPUT"

  build-upload-packages:
    needs: build-matrix
    runs-on: ubuntu-20.04
    strategy:
      matrix: ${{fromJSON(needs.build-matrix.outputs.matrix)}}
      fail-fast: false
      max-parallel: 20
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20'

      - uses: actions/checkout@v3

      - name: "${{ matrix.batch }} : Build batch"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_PROD_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_PROD_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"
          BATCH: ${{ matrix.batch }}
        run: |
          git fetch --tags
          tag=$(git tag | grep '^v20' | grep -v 'v2022\.09\.04' | sort | tail -1)
          git checkout $tag
          export KURL_UTIL_IMAGE=replicated/kurl-util:$tag # required if this is the common package

          failed_pkgs=

          for PKG in ${BATCH}; do
            if [ -z "$PKG" ]; then continue; fi

            set +e
            make dist/$PKG
            status="$?"
            set -e
            if [ "${status}" != "0" ]; then
              failed_pkgs="${failed_pkgs}${PKG} "
              continue
            fi

            MD5="$(openssl md5 -binary dist/$PKG | base64)"
            GITSHA="$(git rev-parse HEAD)"
            aws s3 cp dist/$PKG s3://kurl-sh/dist/${tag}/$PKG \
              --metadata-directive REPLACE --metadata md5="${MD5}",gitsha="${GITSHA}"
            aws s3 cp s3://kurl-sh/dist/${tag}/$PKG s3://kurl-sh/dist/$PKG \
              --metadata-directive REPLACE --metadata md5="${MD5}",gitsha="${GITSHA}"
          done

          if [ -n "${failed_pkgs}" ]; then
            echo "Failed to build packages ${failed_pkgs}"
            exit 1
          fi
